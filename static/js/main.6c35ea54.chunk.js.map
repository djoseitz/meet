{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","Alert.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","showButton","showDetails","setState","event","this","props","className","summary","start","dateTime","timeZone","location","description","target","rel","href","htmlLink","onClick","Component","EventList","events","map","id","CitySearch","locations","query","suggestions","showSuggestions","handleInputChanged","value","handleItemClicked","suggestion","infoText","warningText","updateEvents","type","onChange","onFocus","style","display","Alert","getStyle","color","text","ErrorAlert","fontWeight","WarningAlert","fontSize","NumberOfEvents","numberOfEvents","submitNumber","isNaN","includes","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","extractLocations","localStorage","setItem","JSON","stringify","Set","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","App","locationEvents","filter","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.6c35ea54.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    show: false,\n    showButton: 'show details',\n  };\n  showDetails = () => {\n    if (this.state.show === true) {\n      this.setState({ show: false, showButton: 'show details' });\n    } else {\n      this.setState({ show: true, showButton: 'hide details' });\n    }\n  };\n\n  render() {\n    const event = this.props.event;\n    return (\n      <div className=\"event\">\n        <div className=\"summary\">\n          <h1>{event.summary}</h1>\n        </div>\n        <div className=\"eventInfo_collapsed\">\n          <span className=\"startDateTime\">\n            {event.start.dateTime} ({event.start.timeZone} Standard Time)\n          </span>\n          <br />\n          <span className=\"location\">\n            @{event.summary} | {event.location}\n          </span>\n        </div>\n        {this.state.show && (\n          <div className=\"detailInfo\">\n            <h2>About event:</h2>\n            <div className=\"description\">{event.description}</div>\n            <a\n              className=\"eventLink\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href={event.htmlLink}\n            >\n              See details on Google Calender\n            </a>\n          </div>\n        )}\n        <div>\n          <button className=\"showDetails\" onClick={this.showDetails}>\n            {this.state.showButton}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className='EventList'>\n        {this.props.events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\n\nclass CitySearch extends Component {\n  state = {\n    locations: this.props.locations,\n    query: '',\n    suggestions: [],\n    showSuggestions: false,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n      infoText: '',\n      warningText: '',\n    });\n    this.props.updateEvents(suggestion);\n  };\n\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input \n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion}>\n              {suggestion}\n            </li>\n          ))}\n          <li key='all'>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n    this.className = null;\n  }\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  };\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()} className={this.className}>\n          {this.props.text}\n        </p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n    this.className = 'info';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n    this.className = 'error';\n  }\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontWeight: '600',\n    };\n  };\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';\n    this.className = 'warning';\n  }\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontWeight: '600',\n      fontSize: '180px',\n    };\n  };\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\nimport { ErrorAlert, WarningAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  };\n\n  submitNumber = (event) => {\n    const value = event.target.value;\n    if (value > 32 || value < 1 || value === '') {\n      this.setState({\n        infoText: 'Please enter number between 1 ~ 32',\n        warningText: '',\n        numberOfEvents: value,\n      });\n    } else if (isNaN(value)) {\n      this.setState({\n        infoText: 'Please enter number',\n        numberOfEvents: value,\n        warningText: '',\n      });\n      if (value.includes('fuck') || value.includes('shit')) {\n        this.setState({\n          numberOfEvents: value,\n          warningText: 'What??!! 🤬🤬🤬',\n          infoText: '',\n        });\n      }\n    } else {\n      this.props.updateEvents(null, value);\n      this.setState({ numberOfEvents: value, infoText: '', warningText: '' });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <ErrorAlert text={this.state.infoText} />\n        <WarningAlert text={this.state.warningText} />\n        <label>Number of Events: </label>\n        <input\n          type=\"text\"\n          className=\"numberInput\"\n          value={this.state.numberOfEvents}\n          onChange={this.submitNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","const mockData = [\n  {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description:\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n  {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description:\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n];\n\nexport { mockData };","import axios from 'axios';\nimport { mockData } from './mock-data';\nimport NProgress from 'nprogress';\n\n/**\n *\n * @param {*} events:\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = \n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    'https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}'\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n}\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n  NProgress.done();  \n  return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://v42fuly3x5.execute-api.us-west-1.amazonaws.com/dev/api/get-events/' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://v42fuly3x5.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getAccessToken(code);\n  }\n  return accessToken;\n};\n\nexport const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://v42fuly3x5.execute-api.us-west-1.amazonaws.com/dev/api/token/' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = { \n    events:[],\n    locations: []\n   };\n\n   updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.numberOfEvents}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}