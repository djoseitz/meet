{"version":3,"sources":["Alert.js","NumberOfEvents.js","CitySearch.js","Event.js","EventList.js","LoadingSpinner/spinner.gif","LoadingSpinner/LoadingSpinner.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Alert","props","getStyle","color","className","style","this","text","Component","InfoAlert","WarningAlert","ErrorAlert","NumberOfEvents","state","numberOfEvents","submitNumber","event","value","target","setState","infoText","warningText","isNaN","includes","updateEvents","type","onChange","CitySearch","query","suggestions","showSuggestions","locations","handleItemClicked","suggestion","handleChange","filter","location","toUpperCase","indexOf","length","onFocus","display","map","id","onClick","Event","show","showButton","showDetails","summary","start","dateTime","timeZone","description","rel","href","htmlLink","EventList","events","LoadingSpinner","src","spinner","alt","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","extractLocations","Set","getEvents","a","NProgress","window","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","result","data","setItem","stringify","accessToken","checkToken","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","fetch","then","res","json","catch","error","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","currentLocation","isLoading","eventCount","response","slice","locationEvents","numEvents","mounted","renderData","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.459b61dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  };\n\n  render() {\n    return (\n      <div className='Alert'>\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#323edd';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#B73DBA';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#ec0101';\n  }\n}\n\nexport { InfoAlert, WarningAlert, ErrorAlert };\n","import React, { Component } from 'react';\nimport { ErrorAlert, WarningAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  };\n\n  submitNumber = (event) => {\n    const value = event.target.value;\n    if (value > 32 || value < 1 || value === '') {\n      this.setState({\n        infoText: 'Please enter number between 1 ~ 32',\n        warningText: '',\n        numberOfEvents: value,\n      });\n    } else if (isNaN(value)) {\n      this.setState({\n        infoText: 'Please enter number',\n        numberOfEvents: value,\n        warningText: '',\n      });\n      if (value.includes('fuck') || value.includes('shit')) {\n        this.setState({\n          numberOfEvents: value,\n          warningText: 'What??!! 🤬🤬🤬',\n          infoText: '',\n        });\n      }\n    } else {\n      this.props.updateEvents(null, value);\n      this.setState({ numberOfEvents: value, infoText: '', warningText: '' });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <ErrorAlert text={this.state.infoText} />\n        <WarningAlert text={this.state.warningText} />\n        <label>Number of Events: </label>\n        <input\n          type=\"text\"\n          className=\"numberInput\"\n          value={this.state.numberOfEvents}\n          onChange={this.submitNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\nimport PropTypes from 'prop-types';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: false,\n    locations: this.props.locations,\n    infoText: '',\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n    });\n    this.props.updateEvents(suggestion);\n  };\n\n  // Displays suggestions based on user input (autocomplete feature)\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: `Sorry, we could not find \"${value}\". Please try another city`,\n        showSuggestions: false,\n      });\n    } else {\n      this.setState({\n        infoText: '',\n        query: value,\n        suggestions,\n      });\n    }\n  };\n\n  render() {\n    const { query, suggestions, showSuggestions, infoText } = this.state;\n\n    return (\n      <div className='CitySearch'>\n        <label>Choose your nearest city</label>\n        <input\n          type='text'\n          className='city'\n          value={query}\n          onChange={this.handleChange}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className='suggestions'\n          style={showSuggestions ? {} : { display: 'none' }}\n        >\n          {suggestions.map((suggestion) => (\n            <li\n              id={suggestion}\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key='all' onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n        <InfoAlert text={infoText} />\n      </div>\n    );\n  }\n}\n\nCitySearch.propTypes = {\n  locations: PropTypes.array.isRequired,\n  updateEvents: PropTypes.func.isRequired,\n};\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    show: false,\n    showButton: 'show details',\n  };\n  showDetails = () => {\n    if (this.state.show === true) {\n      this.setState({ show: false, showButton: 'show details' });\n    } else {\n      this.setState({ show: true, showButton: 'hide details' });\n    }\n  };\n\n  render() {\n    const event = this.props.event;\n    return (\n      <div className=\"event\">\n        <div className=\"summary\">\n          <h1>{event.summary}</h1>\n        </div>\n        <div className=\"eventInfo_collapsed\">\n          <span className=\"startDateTime\">\n            {event.start.dateTime} ({event.start.timeZone} Standard Time)\n          </span>\n          <br />\n          <span className=\"location\">\n            @{event.summary} | {event.location}\n          </span>\n        </div>\n        {this.state.show && (\n          <div className=\"detailInfo\">\n            <h2>About event:</h2>\n            <div className=\"description\">{event.description}</div>\n            <a\n              className=\"eventLink\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href={event.htmlLink}\n            >\n              See details on Google Calender\n            </a>\n          </div>\n        )}\n        <div>\n          <button className=\"showDetails\" onClick={this.showDetails}>\n            {this.state.showButton}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className='EventList'>\n        {this.props.events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","export default __webpack_public_path__ + \"static/media/spinner.e3362610.gif\";","import React from 'react';\nimport spinner from './spinner.gif';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className='LoadingSpinner'>\n      <img src={spinner} alt='Loading...' />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","const mockData = [\n  {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description:\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n  {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description:\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n];\nexport { mockData };\n","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData) };\n  }\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    NProgress.done();\n    return {\n      events: JSON.parse(events).events,\n      locations: extractLocations(JSON.parse(events).events),\n    };\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = `https://v42fuly3x5.execute-api.us-west-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events, locations };\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || !tokenCheck) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        'https://v42fuly3x5.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result.error ? false : true;\n};\n\nexport const removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport const getToken = async (code) => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://v42fuly3x5.execute-api.us-west-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n","import React, { Component } from 'react';\nimport NumberOfEvents from './NumberOfEvents';\nimport CitySearch from './CitySearch';\nimport EventList from './EventList';\n// import DataVisualization from './DataVisualization';\nimport LoadingSpinner from './LoadingSpinner/LoadingSpinner';\nimport { WarningAlert } from './Alert';\nimport { getEvents } from './api';\nimport './styles/App.css';\nimport './styles/nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    numberOfEvents: '10',\n    warningText: '',\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    this.mounted = true;\n    if (!navigator.onLine) {\n      this.setState({\n        warningText:\n          'You are currently using the app offline and viewing data from your last visit. Data will not be up-to-date.',\n      });\n    } else {\n      this.setState({ warningText: '' });\n    }\n\n    if (this.mounted) {\n      this.updateEvents();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  // Filters events based on location and number given in user input\n  updateEvents = (location, eventCount) => {\n    this.setState({ isLoading: true }); // Start loading gif\n\n    const { currentLocation, numberOfEvents } = this.state;\n    // If user selects a location from input\n    if (location) {\n      getEvents().then((response) => {\n        // Applies new filter for location\n        const locationEvents =\n          location === 'all'\n            ? response.events\n            : response.events.filter((event) => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: events,\n          currentLocation: location,\n          locations: response.locations,\n          isLoading: false,\n        });\n      });\n    } else {\n      getEvents().then((response) => {\n        // Persists location filter from state\n        const locationEvents =\n          currentLocation === 'all'\n            ? response.events\n            : response.events.filter(\n                (event) => event.location === currentLocation\n              );\n        const numEvents = eventCount || numberOfEvents;\n        const events = locationEvents.slice(0, numEvents);\n        if (this.mounted) {\n          return this.setState({\n            events: events,\n            numberOfEvents: eventCount,\n            locations: response.locations,\n            isLoading: false,\n          });\n        }\n      });\n    }\n  };\n\n  // Renders loading spinner while live data is being rendered\n  renderData = () => {\n    const { events, locations, isLoading } = this.state;\n\n    return isLoading ? (\n      <LoadingSpinner />\n    ) : (\n      <div>\n        {/* <DataVisualization events={events} locations={locations} /> */}\n        <EventList events={events} />\n      </div>\n    );\n  };\n\n  render() {\n    const { numberOfEvents, locations, warningText } = this.state;\n\n    return (\n      <div className='App'>\n        <h1>MeetApp</h1>\n        <CitySearch locations={locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents\n          numberOfEvents={numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <WarningAlert text={warningText} />\n        {this.renderData()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>MeetApp</h1>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\natatus.config('bb62b23b319e438f8a94c116128c5293').install();\n"],"sourceRoot":""}